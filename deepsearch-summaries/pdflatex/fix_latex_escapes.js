#!/usr/bin/env node

const fs = require('fs');

console.log('ğŸ”§ Nettoyage complet des caractÃ¨res Ã©chappÃ©s LaTeX');

// Lire le fichier raw.md depuis le rÃ©pertoire courant
let content = fs.readFileSync('raw.md', 'utf8');

// Compter les occurrences avant
const beforeUnderscore = (content.match(/\\_/g) || []).length;
const beforeDollar = (content.match(/\\\$/g) || []).length;
const beforeBracket = (content.match(/\\\[/g) || []).length;

console.log(`ğŸ“Š Avant correction:`);
console.log(`   \\_ : ${beforeUnderscore} occurrences`);
console.log(`   \\$ : ${beforeDollar} occurrences`);
console.log(`   \\[ : ${beforeBracket} occurrences`);

// Remplacer tous les caractÃ¨res Ã©chappÃ©s
content = content
  .replace(/\\_/g, '_')     // \_ â†’ _
  .replace(/\\\$/g, '$')    // \$ â†’ $
  .replace(/\\\[/g, '[')    // \[ â†’ [
  .replace(/\\\]/g, ']');   // \] â†’ ] (au cas oÃ¹)

// Compter aprÃ¨s
const afterUnderscore = (content.match(/\\_/g) || []).length;
const afterDollar = (content.match(/\\\$/g) || []).length;
const afterBracket = (content.match(/\\\[/g) || []).length;

// Ã‰crire le rÃ©sultat dans raw_fixed.md (mÃªme rÃ©pertoire)
fs.writeFileSync('raw_fixed.md', content);

console.log(`\nâœ… Corrections effectuÃ©es:`);
console.log(`   \\_ : ${beforeUnderscore} â†’ ${afterUnderscore} (${beforeUnderscore - afterUnderscore} corrigÃ©s)`);
console.log(`   \\$ : ${beforeDollar} â†’ ${afterDollar} (${beforeDollar - afterDollar} corrigÃ©s)`);
console.log(`   \\[ : ${beforeBracket} â†’ ${afterBracket} (${beforeBracket - afterBracket} corrigÃ©s)`);
console.log(`\nğŸ“„ Fichier corrigÃ© sauvÃ©: raw_fixed.md`);
console.log(`ğŸš€ PrÃªt pour la compilation LaTeX !`);
